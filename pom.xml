<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Needed to make deployment work -->
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>org.overturetool.graphics</groupId>
	<artifactId>root</artifactId>
	<packaging>pom</packaging>
	<name>Overture Graphics Root Pom</name>
	<version>1.1.2</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<overture.version>2.4.0</overture.version>
	</properties>

	<modules>
		<module>core</module>
	</modules>
	
	<profiles>
		<profile>
			<id>With-IDE</id>
			<modules>
				<module>ide</module>
			</modules>
		</profile>
	</profiles>


	<build>
		<defaultGoal>install</defaultGoal>

		<plugins>
			<plugin>
				<!--
						This plugin allows you to run

$ mvn versions:set -Dtycho.mode=maven -PWith-IDE -DnewVersion=2.0.4

and get all the version numbers updated nearly for free.
The tycho bit on the end just tells tycho (used in the
eclipse plugin build) to piss off.

Note that the versions in MANIFEST.MF files, etc, still
need to be set.

More details on the versions-maven-plugin are at
http://mojo.codehaus.org/versions-maven-plugin/
				-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<!-- Version control obviates the need for this. -->
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
		</plugins>

		<!-- Configuration of plugins for inheriting pom.xml files should
				 be in the pluginManagement tag
		-->
		<pluginManagement>
			<plugins>
				<!-- Configure the compiler for all Overture Projects -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<!-- Attatch sources to all installed jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
					<!-- <executions> -->
					<!--	 <execution> -->
					<!--		 <id>attach-sources</id> -->
					<!--		 <goals> -->
					<!--			 <goal>jar</goal> -->
					<!--		 </goals> -->
					<!--	 </execution> -->
					<!-- </executions> -->
					<configuration>
						<attach>true</attach>
					</configuration>
				</plugin>

				<!-- Enable JavaDoc but dont fail on error. This must be disabled for
						 the Eclipse project in the IDE -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<failOnError>false</failOnError>
						<quiet>true</quiet>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.13</version>
					<configuration>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>

				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.1.8</version>
					<configuration>
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<releaseProfiles>build-server,With-IDE,all-platforms</releaseProfiles>
						<tagNameFormat>Release/@{project.version}</tagNameFormat>
					</configuration>
				</plugin>


				<!-- Disable the maven enforcer warning in Eclipse -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				
			</plugins>
		</pluginManagement>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.4</version>
			</extension>
		</extensions>
	</build>

	<scm>
		<url>git@github.com:overturetool/overture-graphics-plugin.git</url>
		<connection>scm:git:git://github.com/overturetool/overture-graphics-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:overturetool/overture-graphics-plugin.git</developerConnection>
		<tag>Release/1.1.2</tag>
	</scm>

	<developers>
		<developer>
			<id>overture</id>
			<email>info@overturetool.org</email>
			<name>Information contact for the Overture project</name>
			<url>http://overturetool.org/</url>
			<roles>
				<role>Primary point of contact</role>
			</roles>
		</developer>
		<developer>
			<id>lausdahl</id>
			<email>lausdahl@eng.au.dk</email>
			<name>Kenneth Lausdahl</name>
			<roles>
				<role>coordinator</role>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<organization>Aarhus University</organization>
			<organizationUrl>http://eng.au.dk/</organizationUrl>
		</developer>
		
	</developers>

	<licenses>
		<license>
			<name>Private</name>
			<url />
		</license>
	</licenses>

	<organization>
		<name>Overture</name>
		<url>http://overturetool.org/</url>
	</organization>

	<inceptionYear>2016</inceptionYear>

</project>
